@model my.ns.entities.dto.identity.UserClaim
@using AcceptedClaims = my.ns.entities.IdentityConfig.ApplicationUser
@using i18n = Resources.Views.Admin.Users.Resources
@using i18nNav = Resources.Views.Admin.Resources
@using i18nCommon = Resources.Views.Common.ViewTranslation

@using my.ns.client.Helpers
@{
    ViewBag.Title = i18nNav.UsersController_AddClaimNavText;
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    IEnumerable<SelectListItem> Select = ViewBag.ClaimTypeList;
}

<h2>@ViewBag.Title</h2>
@if (Model.UserName == null)
{
    @Html.ButtonBack("ViewAllClaims")
}
else
{
    @Html.ButtonBack("EditClaims", new { UserName = Model.UserName })
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClaimType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ClaimType, Select, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClaimType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClaimValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClaimValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClaimValue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@i18nCommon.CreateButtonText" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>

</div>
